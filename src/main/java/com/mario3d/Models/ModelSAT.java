package com.mario3d.Models;

import com.jogamp.opengl.util.texture.Texture;
import com.mario3d.GameManager;
import com.mario3d.Displays.Textures;
import com.mario3d.Displays.FPSBuffers.FPSBufferStream;
import com.mario3d.Displays.FPSBuffers.FPSBufferUtils;
import com.mario3d.Entities.SAT;
import com.mario3d.Entities.Utils.Aspect;
import com.mario3d.Models.ModelDeath.InnerModelDeath;
import com.mario3d.Models.ModelTex.ModelCubeTex;
import com.mario3d.Models.ModelTex.ModelTexArray;
import com.mario3d.WorldSystem.WorldPosition;

public class ModelSAT implements Model, InnerModelDeath{//Cubeのあれを用いて座標を入手
    
    public static final double[][][] corners = new double[][][] {
        {//胴体 -0.6, 0.2, -0.8, 0.6, 1.0, 0.8
            {-0.600000, 0.200000, -0.800000},
            {0.600000, 0.200000, -0.800000},
            {-0.600000, 1.000000, -0.800000},
            {0.600000, 1.000000, -0.800000},
            {-0.600000, 0.200000, 0.800000},
            {0.600000, 0.200000, 0.800000},
            {-0.600000, 1.000000, 0.800000},
            {0.600000, 1.000000, 0.800000}
        },
        {//頭 -0.5, 0.6, 0.5, 0.5, 1.3, 1.0
            {-0.500000, 0.600000, 0.500000},
            {0.500000, 0.600000, 0.500000},
            {-0.500000, 1.300000, 0.500000},
            {0.500000, 1.300000, 0.500000},
            {-0.500000, 0.600000, 1.000000},
            {0.500000, 0.600000, 1.000000},
            {-0.500000, 1.300000, 1.000000},
            {0.500000, 1.300000, 1.000000}
        },
        {//左前脚
            {0.200000, 0.000000, 0.400000},
            {0.800000, 0.000000, 0.400000},
            {0.200000, 0.400000, 0.400000},
            {0.800000, 0.400000, 0.400000},
            {0.200000, 0.000000, 1.000000},
            {0.800000, 0.000000, 1.000000},
            {0.200000, 0.400000, 1.000000},
            {0.800000, 0.400000, 1.000000}
        },
        {//右前脚
            {-0.800000, 0.000000, 0.400000},
            {-0.200000, 0.000000, 0.400000},
            {-0.800000, 0.400000, 0.400000},
            {-0.200000, 0.400000, 0.400000},
            {-0.800000, 0.000000, 1.000000},
            {-0.200000, 0.000000, 1.000000},
            {-0.800000, 0.400000, 1.000000},
            {-0.200000, 0.400000, 1.000000}
        },
        {//左後脚
            {0.200000, 0.000000, -1.000000},
            {0.800000, 0.000000, -1.000000},
            {0.200000, 0.400000, -1.000000},
            {0.800000, 0.400000, -1.000000},
            {0.200000, 0.000000, -0.400000},
            {0.800000, 0.000000, -0.400000},
            {0.200000, 0.400000, -0.400000},
            {0.800000, 0.400000, -0.400000}
        },
        {//右後脚
            {-0.800000, 0.000000, -1.000000},
            {-0.200000, 0.000000, -1.000000},
            {-0.800000, 0.400000, -1.000000},
            {-0.200000, 0.400000, -1.000000},
            {-0.800000, 0.000000, -0.400000},
            {-0.200000, 0.000000, -0.400000},
            {-0.800000, 0.400000, -0.400000},
            {-0.200000, 0.400000, -0.400000}
        },
        {//尻尾
            {-0.050000, 0.900000, -1.300000},
            {0.050000, 0.900000, -1.300000},
            {-0.050000, 1.000000, -1.300000},
            {0.050000, 1.000000, -1.300000},
            {-0.050000, 0.900000, -0.800000},
            {0.050000, 0.900000, -0.800000},
            {-0.050000, 1.000000, -0.800000},
            {0.050000, 1.000000, -0.800000}
        },
        {//左耳
            {0.300000, 1.300000, 0.600000},
            {0.400000, 1.300000, 0.600000},
            {0.300000, 1.400000, 0.600000},
            {0.400000, 1.400000, 0.600000},
            {0.300000, 1.300000, 0.800000},
            {0.400000, 1.300000, 0.800000},
            {0.300000, 1.400000, 0.800000},
            {0.400000, 1.400000, 0.800000}
        },
        {//右耳
            {-0.400000, 1.300000, 0.600000},
            {-0.300000, 1.300000, 0.600000},
            {-0.400000, 1.400000, 0.600000},
            {-0.300000, 1.400000, 0.600000},
            {-0.400000, 1.300000, 0.800000},
            {-0.300000, 1.300000, 0.800000},
            {-0.400000, 1.400000, 0.800000},
            {-0.300000, 1.400000, 0.800000}
        }
    };

    public static final int[][] face = new int[][] {
        {0, 2, 6, 4},//-x
        {0, 1, 5, 4},//-y
        {0, 1, 3, 2},//-z
        {1, 3, 7, 5},//x
        {2, 3, 7, 6},//y
        {4, 5, 7, 6}//z
    };

    public static final int[][][][] tex = ModelTexArray.set(
        new ModelCubeTex(0, 28, 12, 8, 16),
        new ModelCubeTex(0, 52, 10, 7, 5),
        new ModelCubeTex(40, 54, 6, 4, 6),
        new ModelCubeTex(40, 54, 6, 4, 6),
        new ModelCubeTex(40, 54, 6, 4, 6),
        new ModelCubeTex(40, 54, 6, 4, 6),
        new ModelCubeTex(0, 22, 1, 1, 5),
        new ModelCubeTex(17, 22, 1, 1, 2),
        new ModelCubeTex(17, 22, 1, 1, 2));
        /*new int[][][][] {//0.1ごとに1pixel
        {
            {{0, 28}, {0, 36}, {16, 36}, {16, 28}},
            {{28, 52}, {40, 52}, {40, 36}, {28, 36}},
            {{56, 28}, {44, 28}, {44, 36}, {56, 36}},
            {{44, 28}, {44, 36}, {28, 36}, {28, 28}},
            {{16, 52}, {28, 52}, {28, 36}, {16, 36}},
            {{16, 28}, {28, 28}, {28, 36}, {16, 36}}
        },
        {
            {{0, 52}, {0, 59}, {5, 59}, {5, 52}},
            {{15, 59}, {25, 59}, {25, 64}, {15, 64}},
            {{30, 52}, {20, 52}, {20, 59}, {30, 59}},
            {{20, 52}, {20, 59}, {15, 59}, {15, 52}},
            {{5, 64}, {15, 64}, {15, 59}, {5, 59}},
            {{5, 52}, {15, 52}, {15, 59}, {5, 59}}
        },
        {
            {{40, 54}, {40, 58}, {46, 58}, {46, 54}},
            {{52, 58}, {58, 58}, {58, 64}, {52, 64}},
            {{64, 54}, {58, 54}, {58, 58}, {64, 58}},
            {{58, 54}, {58, 58}, {52, 58}, {52, 54}},
            {{46, 64}, {52, 64}, {52, 58}, {46, 58}},
            {{46, 54}, {52, 54}, {52, 58}, {46, 58}}
        },
        {
            {{40, 54}, {40, 58}, {46, 58}, {46, 54}},
            {{52, 58}, {58, 58}, {58, 64}, {52, 64}},
            {{64, 54}, {58, 54}, {58, 58}, {64, 58}},
            {{58, 54}, {58, 58}, {52, 58}, {52, 54}},
            {{46, 64}, {52, 64}, {52, 58}, {46, 58}},
            {{46, 54}, {52, 54}, {52, 58}, {46, 58}}
        },
        {
            {{40, 54}, {40, 58}, {46, 58}, {46, 54}},
            {{52, 58}, {58, 58}, {58, 64}, {52, 64}},
            {{64, 54}, {58, 54}, {58, 58}, {64, 58}},
            {{58, 54}, {58, 58}, {52, 58}, {52, 54}},
            {{46, 64}, {52, 64}, {52, 58}, {46, 58}},
            {{46, 54}, {52, 54}, {52, 58}, {46, 58}}
        },
        {
            {{40, 54}, {40, 58}, {46, 58}, {46, 54}},
            {{52, 58}, {58, 58}, {58, 64}, {52, 64}},
            {{64, 54}, {58, 54}, {58, 58}, {64, 58}},
            {{58, 54}, {58, 58}, {52, 58}, {52, 54}},
            {{46, 64}, {52, 64}, {52, 58}, {46, 58}},
            {{46, 54}, {52, 54}, {52, 58}, {46, 58}}
        },
        {
            {{0, 22}, {0, 23}, {5, 23}, {5, 22}},
            {{6, 23}, {7, 23}, {7, 28}, {6, 28}},
            {{12, 22}, {11, 22}, {11, 23}, {12, 23}},
            {{11, 22}, {11, 23}, {6, 23}, {6, 22}},
            {{5, 28}, {6, 28}, {6, 23}, {5, 23}},
            {{5, 22}, {6, 22}, {6, 23}, {5, 23}}
        },
        {
            {{17, 22}, {17, 23}, {19, 23}, {19, 22}},
            {{20, 23}, {21, 23}, {21, 25}, {20, 25}},
            {{23, 22}, {22, 22}, {22, 23}, {23, 23}},
            {{22, 22}, {22, 23}, {20, 23}, {20, 22}},
            {{19, 25}, {20, 25}, {20, 23}, {19, 23}},
            {{19, 22}, {20, 22}, {20, 23}, {19, 23}}
        },
        {
            {{17, 22}, {17, 23}, {19, 23}, {19, 22}},
            {{20, 23}, {21, 23}, {21, 25}, {20, 25}},
            {{23, 22}, {22, 22}, {22, 23}, {23, 23}},
            {{22, 22}, {22, 23}, {20, 23}, {20, 22}},
            {{19, 25}, {20, 25}, {20, 23}, {19, 23}},
            {{19, 22}, {20, 22}, {20, 23}, {19, 23}}
        }
    };*/

    public ModelSAT(SAT entity) {
        this.entity = entity;
        WP_fpsbuffer = new FPSBufferStream<WorldPosition>(FPSBufferUtils::WP_calc, ()->{return this.entity.pos;}, GameManager.fps, new WorldPosition(entity.pos));
        Asp_fpsbuffer = new FPSBufferStream<Aspect>(FPSBufferUtils::Asp_calc, ()->{return this.entity.aspect;}, GameManager.fps, new Aspect(entity.aspect));
    }

    public void init() {}

    public SAT entity;
    private FPSBufferStream<WorldPosition> WP_fpsbuffer;
    private FPSBufferStream<Aspect> Asp_fpsbuffer;

    //描画対象の座標
    public WorldPosition setPosition() {
        return WP_fpsbuffer.read();
    }

    //描画対象の角度
    public Aspect setAspect() {
        return Asp_fpsbuffer.read();
    }

    //何回nextCubeを呼び出せばいいか 位置変更の指示の役割もある
    public int getCubeCount() {
        fi = -1;
        return 9;
    }

    //次のCubeに移行
    public void nextCube() {
        fi++;
        ti = 0;
    }

    //テクスチャ
    private static Texture texture = Textures.Loader.getTexture("entity", "sat");
    public Texture modelTex() {return texture;}

    private int ti;
    private int fi;

    //テクスチャの切り出す場所 [4][2]
    public int[][] nextFaceTexCut() {return tex[fi][ti];}

    private double[][] result = new double[4][];

    //座標（そのエンティティの相対座標）[4][3]
    public double[][] nextFacePos() {
        for (int i = 0;i < 4;i++) {
            result[i] = corners[fi][face[ti][i]];
        }
        ti++;
        return result;
    }
}
